#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

// Layer definitions
#define DEFAULT 0
#define KEYPAD  1
#define FN      2
#define MOD     3

// Control key hold-tap macro
#define LCTR(k)  &hm LCTRL k
#define RCTR(k)  &hm RCTRL k

// Alt key hold-tap macro
#define LAL(k)  &hm LALT k
#define RAL(k)  &hm RALT k

// Shift key hold-tap macro
#define LSHF(k)  &hm LSHFT k
#define RSHF(k)  &hm RSHFT k

// Layer 2 hold-tap macro
#define FNK(k)     &lt FN k

// Bluetooth macro to tidy up the layout
#define BT(k)      &bt BT_SEL k

/ {
    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };
    };

  keymap {
    compatible = "zmk,keymap";

    default_layer {  // DEFAULT layer
      bindings = <
        &kp GRAVE &kp N1    &kp N2   &kp N3     &kp N4     &kp N5 &tog 1                                                           &mo MOD   &kp N6 &kp N7   &kp N8      &kp N9      &kp N0   &kp MINUS
        &kp TAB   &kp Q     &kp W    &kp E      &kp R      &kp T  &none                                                            &kp EQUAL &kp Y  &kp U    &kp I       &kp O       &kp P    &kp BSLH
        LCTR(ESC) &kp A     &kp S    &kp D      &kp F      &kp G  &none           &kp LCTRL &kp LALT  &kp LGUI &kp RCTRL           &kp EQUAL &kp H  &kp J    &kp K       &kp L       &kp SEMI &kp SQT
        &kp LSHFT &kp Z     &kp X    &kp C      &kp V      &kp B                            &kp PG_UP &kp HOME                               &kp N  &kp M    RCTR(COMMA) LAL(DOT)    &kp FSLH &kp RSHFT
        &mo FN    &kp EQUAL LAL(INS) LCTR(LEFT) LSHF(RIGHT)              &kp BSPC FNK(DEL)  &kp PG_DN &kp END  FNK(ENTER) &kp SPACE                 RSHF(UP) RCTR(LBKT)  LAL(RBKT)   &kp DOWN &kp EQUAL
      >;
    };
    keypad { // KEYPAD layer
      bindings = <
        &trans    &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &trans                                                           &mo MOD &kp N6 &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &trans
        &trans    &kp Q     &kp W    &kp E    &kp R      &kp T  &none                                                            &none   &kp Y  &kp KP_N7  &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &trans
        &trans    &kp A     &kp S    &kp D    &kp F      &kp G  &none           &kp LCTRL &kp LALT  &kp LGUI &kp RCTRL           &none   &kp H  &kp KP_N4  &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &trans
        &trans    &kp Z     &kp X    &kp C    &kp V      &kp B                            &kp PG_UP &kp HOME                             &kp N  &kp KP_N1  &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &trans
        &trans    &trans    &trans   &trans   &trans                   &kp BSPC FNK(DEL)  &kp PG_DN &kp END  FNK(ENTER) &kp KP_N0               &trans     &trans       &kp KP_DOT    &trans          &trans 
      >;
    };
    fn {  // FN layer
      bindings = <
        &kp F1 &kp F2 &kp F3     &kp F4 &kp F5 &kp F6 &tog KEYPAD                                     &mo MOD &kp F7   &kp F8   &kp F9  &kp F10   &kp F11 &kp F12
        &trans &trans &trans     &trans &trans &trans &none                                           &none   &trans   &trans   &trans  &trans    &trans  &trans
        &trans &trans &trans     &trans &trans &trans &none        &trans &trans &trans &trans        &none   &kp LEFT &kp DOWN &kp UP  &kp RIGHT &trans  &trans
        &trans &trans &trans     &trans &trans &trans                     &trans &trans                       &trans   &trans   &trans  &trans    &trans  &trans
        &trans &trans &caps_word &trans &trans              &trans &trans &trans &trans &trans &trans                  &trans   &trans  &trans    &trans  &trans
      >;
    };
    mod {  // MOD layer
      bindings = <
        &none     BT(0)     BT(1)    BT(2)    BT(3)      BT(4)  &none                                                 &trans                 &none &none      &none      &none &none &none
        &none     &none     &none    &none    &none      &none  &bootloader                                           &bootloader            &none &none      &none      &none &none &none
        &none     &none     &none    &none    &none      &none  &none      &none &none &bt BT_CLR &none               &rgb_ug RGB_MEFS_CMD 5 &none &none      &none      &none &none &none
        &none     &none     &none    &none    &none      &none                   &none &none                                                 &none &none      &none      &none &none &none
        &none     &none     &none    &none    &none                  &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                 &bl BL_INC &bl BL_DEC &none &none &none
      >;
    };
  };
};
